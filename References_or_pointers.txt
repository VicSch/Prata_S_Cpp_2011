Есть две главных причины использовать ссылочные аргументы:
• чтобы позволить изменять объект данных в вызывающей функции;
• чтобы ускорить работу программы за счет передачи ссылки вместо полной 
копии объекта данных.

Вторая причина наиболее важна для крупных объектов данных, таких как 
структуры и объекты классов. По этим же двум причинам в качестве аргумента может 
использоваться указатель. Это оправдано, поскольку аргументы-ссылки, по сути, являются
лишь альтернативным интерфейсом для кода, где применяются указатели. Итак, в 
каких случаях следует использовать ссылку, указатель или передачу по значению? Ниже
приводятся основные рекомендации.

Функция использует передаваемые данные без их изменения в перечисленных
ниже ситуациях.
• Если объект данных небольшой, например, такой как встроенный тип данных
или некрупная структура, передавайте его по значению.
• Если объект данных представляет собой массив, используйте указатель, 
поскольку это единственный вариант. Объявите указатель с квалификатором const.
• Если объект данных является структурой приемлемого размера, используйте
const-указатель или const-ссылку для увеличения эффективности программы.
В этом случае удастся сохранить время и пространство, необходимое для 
копирования структуры или строения класса. Объявите указатель или ссылку с 
квалификатором const.
• Если объект данных является объектом класса, используйте ссылку с 
квалификатором const. Семантика строения класса часто требует применения ссылки.
Эта главная причина добавления этого новшества в язык C++. Таким образом,
стандартом является передача объектов класса по ссылке.

Функция изменяет данные вызывающей функции в следующих ситуациях.
• Если объект данных относится к одному из встроенных типов, используйте 
указатель. Если в коде встретилось выражение вида fixit (&х), где х имеет тип int,
это явно означает, что функция должна изменять значение х.
• Если объект данных представляет собой массив, остается один выбор — указатель.
• Если объект данных является структурой, можно использовать ссылку или 
указатель.
• Когда объект данных представляет собой объект класса, следует применять
ссылку.

Конечно, это лишь рекомендации, и могут существовать причины для других 
решений.